{"version":3,"sources":["webpack:///./src/pages/portfolio/calculator.js"],"names":["buttons","id","disp","operators","Display","render","this","props","secondary","join","primary","React","Component","Buttons","map","button","onClick","onPress","key","className","App","handlePress","input","setState","currentCalc","calcItems","clearExp","lastOutput","state","length","test","slice","String","operation","clearLog","includes","output","array","expression","running_total","parseFloat","i","eval_exp","overallCalc","AboutPage"],"mappings":"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","file":"component---src-pages-portfolio-calculator-js-cc6289833954df4a9f0b.js","sourcesContent":["import React, { ReactDOM } from \"react\"\r\n\r\nimport Header from \"../../components/header\"\r\nimport Footer from \"../../components/footer\"\r\nimport SEO from \"../../components/seo\"\r\nimport \"./calculator.css\"\r\n\r\nconst buttons = [\r\n  { id: \"watermark\", disp: \"HS\" },\r\n  { id: \"clear\", disp: \"AC\" },\r\n  { id: \"divide\", disp: \"/\" },\r\n  { id: \"seven\", disp: \"7\" },\r\n  { id: \"eight\", disp: \"8\" },\r\n  { id: \"nine\", disp: \"9\" },\r\n  { id: \"multiply\", disp: \"*\" },\r\n  { id: \"four\", disp: \"4\" },\r\n  { id: \"five\", disp: \"5\" },\r\n  { id: \"six\", disp: \"6\" },\r\n  { id: \"subtract\", disp: \"-\" },\r\n  { id: \"one\", disp: \"1\" },\r\n  { id: \"two\", disp: \"2\" },\r\n  { id: \"three\", disp: \"3\" },\r\n  { id: \"add\", disp: \"+\" },\r\n  { id: \"zero\", disp: \"0\" },\r\n  { id: \"decimal\", disp: \".\" },\r\n  { id: \"equals\", disp: \"=\" },\r\n]\r\n\r\nconst operators = /\\+|-|\\*|\\//\r\n\r\nfunction eval_exp(array) {\r\n  let expression = [...array]\r\n  let running_total = parseFloat(expression[0])\r\n\r\n  if (operators.test(expression[expression.length - 1])) {\r\n    if (operators.test(expression[expression.length - 3])) {\r\n      expression = expression.slice(0, expression.length - 3)\r\n    } else {\r\n      expression = expression.slice(0, expression.length - 2)\r\n    }\r\n  }\r\n  for (let i = 1; i < expression.length; i++) {\r\n    if (operators.test(expression[i])) {\r\n      if (expression[i + 1] === \"-\") {\r\n        switch (expression[i]) {\r\n          case \"+\":\r\n            running_total -= parseFloat(expression[i + 2])\r\n            break\r\n          case \"*\":\r\n            running_total *= -1 * parseFloat(expression[i + 2])\r\n            break\r\n          case \"/\":\r\n            running_total /= -1 * parseFloat(expression[i + 2])\r\n            break\r\n          default:\r\n            break\r\n        }\r\n        i++\r\n      } else {\r\n        switch (expression[i]) {\r\n          case \"+\":\r\n            running_total += parseFloat(expression[i + 1])\r\n            break\r\n          case \"-\":\r\n            running_total -= parseFloat(expression[i + 1])\r\n            break\r\n          case \"*\":\r\n            running_total *= parseFloat(expression[i + 1])\r\n            break\r\n          case \"/\":\r\n            running_total /= parseFloat(expression[i + 1])\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return running_total\r\n}\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"display-overall\">\r\n        <div id=\"display-total\">{this.props.secondary.join(\" \")}</div>\r\n        <div id=\"display\">{this.props.primary}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"buttons\">\r\n        {this.props.buttons.map(button => {\r\n          return (\r\n            <div\r\n              onClick={() => this.props.onPress(button.disp)}\r\n              key={button.id}\r\n              className=\"button\"\r\n              id={button.id}\r\n            >\r\n              {button.disp}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      calcItems: [],\r\n      currentCalc: \"A JavaScript Calculator\",\r\n      overallCalc: \"\",\r\n      lastOutput: null,\r\n      operation: \"\",\r\n      clearExp: true,\r\n      clearLog: false,\r\n    }\r\n  }\r\n\r\n  handlePress = input => {\r\n    switch (input) {\r\n      case \"AC\":\r\n        // Reset everything\r\n        this.setState({\r\n          currentCalc: \"0\",\r\n          calcItems: [],\r\n          clearExp: true,\r\n          lastOutput: null,\r\n        })\r\n        break\r\n      case \"+\":\r\n      case \"-\":\r\n      case \"*\":\r\n      case \"/\":\r\n        if (\r\n          this.state.currentCalc.length === 1 &&\r\n          operators.test(this.state.currentCalc)\r\n        ) {\r\n          // Multiple operator selections. Handle exception for subtraction (negative)\r\n          if (this.state.currentCalc === \"-\") {\r\n            if (input === \"-\") {\r\n              break\r\n            } else {\r\n              if (\r\n                operators.test(\r\n                  this.state.calcItems[this.state.calcItems.length - 2]\r\n                )\r\n              ) {\r\n                this.setState({\r\n                  calcItems: [\r\n                    ...this.state.calcItems.slice(\r\n                      0,\r\n                      this.state.calcItems.length - 2\r\n                    ),\r\n                    input,\r\n                  ],\r\n                  currentCalc: input,\r\n                })\r\n                break\r\n              } else {\r\n                this.setState({\r\n                  calcItems: [\r\n                    ...this.state.calcItems.slice(\r\n                      0,\r\n                      this.state.calcItems.length - 1\r\n                    ),\r\n                    input,\r\n                  ],\r\n                  currentCalc: input,\r\n                })\r\n                break\r\n              }\r\n            }\r\n          } else {\r\n            if (input === \"-\") {\r\n              this.setState({\r\n                calcItems: [...this.state.calcItems, input],\r\n                currentCalc: input,\r\n              })\r\n              break\r\n            } else {\r\n              this.setState({\r\n                calcItems: [\r\n                  ...this.state.calcItems.slice(\r\n                    0,\r\n                    this.state.calcItems.length - 1\r\n                  ),\r\n                  input,\r\n                ],\r\n                currentCalc: input,\r\n              })\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (this.state.clearExp === true && this.state.lastOutput != null) {\r\n          // User presses function after a recent calculation\r\n          this.setState({\r\n            calcItems: [String(this.state.lastOutput), input],\r\n            lastOutput: null,\r\n            currentCalc: input,\r\n            operation: input,\r\n            clearExp: true,\r\n            clearLog: false,\r\n          })\r\n          break\r\n        } else if (this.state.clearLog === true) {\r\n          // New calculation without using previous value\r\n          this.setState({\r\n            calcItems: [this.state.currentCalc, input],\r\n            currentCalc: input,\r\n            clearLog: false,\r\n            clearExp: true,\r\n          })\r\n          break\r\n        } else {\r\n          this.setState({\r\n            calcItems: [...this.state.calcItems, this.state.currentCalc, input],\r\n            currentCalc: input,\r\n            operation: input,\r\n            clearExp: true,\r\n          })\r\n          break\r\n        }\r\n      case \".\":\r\n        // Ensure no double period usage\r\n        if (this.state.currentCalc.includes(\".\")) {\r\n          break\r\n        } else {\r\n          this.setState({\r\n            currentCalc: this.state.currentCalc + input,\r\n          })\r\n          break\r\n        }\r\n\r\n      case \"1\":\r\n      case \"2\":\r\n      case \"3\":\r\n      case \"4\":\r\n      case \"5\":\r\n      case \"6\":\r\n      case \"7\":\r\n      case \"8\":\r\n      case \"9\":\r\n      case \"0\":\r\n        if (this.state.clearExp === true) {\r\n          // For new entries\r\n          this.setState({\r\n            currentCalc: input,\r\n            lastOutput: null,\r\n            clearExp: false,\r\n          })\r\n          break\r\n        } else if (\r\n          this.state.currentCalc[0] === \"0\" &&\r\n          this.state.currentCalc.length === 1\r\n        ) {\r\n          if (input === \"0\") {\r\n            // Prevent multiple leading zeros\r\n            break\r\n          } else {\r\n            this.setState({\r\n              currentCalc: input,\r\n            })\r\n            break\r\n          }\r\n        } else {\r\n          // Regular inputs\r\n          this.setState({\r\n            currentCalc: this.state.currentCalc + input,\r\n          })\r\n          break\r\n        }\r\n\r\n      case \"=\":\r\n        if (this.state.clearLog === true) {\r\n          // Prevent duplicative calculations\r\n          break\r\n        }\r\n\r\n        let buffer = [...this.state.calcItems, this.state.currentCalc]\r\n        let output = eval_exp(buffer)\r\n\r\n        this.setState({\r\n          calcItems:\r\n            operators.test(\r\n              this.state.calcItems[this.state.calcItems.length - 2]\r\n            ) && operators.test(this.state.currentCalc)\r\n              ? [\r\n                  ...this.state.calcItems.slice(\r\n                    0,\r\n                    this.state.calcItems.length - 2\r\n                  ),\r\n                  \"=\",\r\n                  output,\r\n                ]\r\n              : operators.test(this.state.currentCalc)\r\n              ? [\r\n                  ...this.state.calcItems.slice(\r\n                    0,\r\n                    this.state.calcItems.length - 1\r\n                  ),\r\n                  \"=\",\r\n                  output,\r\n                ]\r\n              : [...this.state.calcItems, this.state.currentCalc, \"=\", output],\r\n          lastOutput: output,\r\n          currentCalc: String(output),\r\n          clearExp: true,\r\n          clearLog: true,\r\n        })\r\n        break\r\n      case \"HS\":\r\n        this.setState({\r\n          currentCalc: \"Brought to you by Hal S.\",\r\n          calcItems: [],\r\n          clearExp: true,\r\n          clearLog: true,\r\n        })\r\n        break\r\n      default:\r\n        this.setState({\r\n          currentCalc: this.state.currentCalc + input,\r\n        })\r\n        break\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"application\">\r\n        <div id=\"calculator\">\r\n          <Display\r\n            primary={this.state.currentCalc}\r\n            secondary={this.state.calcItems}\r\n          />\r\n          <Buttons buttons={buttons} onPress={this.handlePress} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst AboutPage = () => (\r\n  <>\r\n    <Header />\r\n    <App />\r\n    <Footer />\r\n  </>\r\n)\r\n\r\nexport default AboutPage\r\n"],"sourceRoot":""}